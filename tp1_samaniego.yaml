openapi: 3.0.0
info:
  version: 1.0.0
  title: Stop COVID
  description: Ma super API contre le COVID
  license:
    name: MIT
servers:
  - url: http://stopcovid/api
paths:
  /profile:
    post:
      description: Create a new profile
      operationId: addProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          description: Created
  /profiles/{name}:
    get:
      description: return a profile based on a name
      parameters:
        - name: name
          in: path
          description: name of the profile
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /profiles/{email}:
    put:
      description: 'on considere le mail comme l identifiant du profil'
      parameters:
        - name: email
          in: path
          description: return the email of the profile
          required: true
          schema:
            type: string
      requestBody: 
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      responses:
        default:
          description: Default error sample response
    get:
      description: return a profile based on an email
      parameters:
        - name: email
          in: path
          description: email of the profile
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /contact:
    post:
      summary: ''
      description: the post allows the creation of the contact
      operationId: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        default:
          description: Default error sample response
  /profiles/{email}/contacts:
    get:
      summary: ''
      description: the list of contact of the profile
      operationId: ''
      parameters:
        - name: email
          in: path
          description: email of the profile
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
  /contacts/{email}:
    put:
      summary: ''
      description: Update an existing contact
      operationId: ''
      parameters:
        - name: email
          in: path
          description: email of the profile
          required: true
          schema:
            type: string
      requestBody: 
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
      responses:
        default:
          description: Default error sample response
    delete:
      summary: ''
      description: delete an existing contact
      operationId: ''
      parameters:
        - name: email
          in: path
          description: email of contact to delete
          required: true
          schema:
            type: string
      responses:
        default:
          description: Default error sample response
  /test:
    post:
      summary: ''
      description: declaration of the test
      operationId: ''
      requestBody:
        description: Test add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        default:
          description: Default error sample response
  /users/{name}:
    get:
      summary: ''
      description: search user by name
      operationId: ''
      parameters:
        - name: name
          in: path
          description: name of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{email}:
    get:
      summary: ''
      description: search user by email
      operationId: ''
      parameters:
        - name: email
          in: path
          description: email of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
  /userProfile/{email}:
    get:
      summary: ''
      description: return the profil of a user
      operationId: ''
      parameters:
        - name: email
          in: path
          description: email of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users/{email}/contacts:
    get:
      summary: ''
      description: return the user list of contact
      operationId: ''
      parameters:
        - name: email
          in: path
          description: email of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of contacts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
  /notification:
    post:
      summary: ''
      description: 'cela permet de notifier un utilisateur avec la date et l identifiant de l utilisateur qui est son id' 
      operationId: ''
      requestBody:
        description: Notify the user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        '200':
          description: Notification response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
components:
  schemas:
    Profile:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        firstname:
          type: string
        age:
          type: integer
        address:
          type: string
        email:
          type: string
    Profiles:
      type: array
      items:
        $ref: '#/components/schemas/Profile'
    Contact:
      type: object
      properties:
        date:
          type: object
        place:
          type: string
        typeOfContact:
          type: boolean
        name:
          type: string
        firstname:
          type: string
        email:
          type: string
    Contacts:
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    Test:
      type: object
      properties:
        date:
          type: object
        positive:
          type: boolean
    User:
      type: object
      properties:
        name:
          type: string
        firstname:
          type: string
        email:
          type: string
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    UserProfile:
      type: object
      properties:
        name:
          type: string
        firstname:
          type: string
        age:
          type: integer
        address:
          type: string
        email:
          type: string
        positive:
          type: boolean
        numberOfContact:
          type: integer
    Notification:
      type: object
      properties:
        email:
          type: string
        date:
          type: object
