openapi: "3.0.0"
info:
  version: 1.0.0
  title: Stop COVID- Hamza Talssi
  description: Ma super API contre le COVID
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
components:
  schemas:
  paths:
    /user:
#creation du profil
    post:
      summary: Add a new profile
      operationId: createProfile
      tags:
        - profiles
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    newProfile:
      type: object
      required:
        - name
        - lastname
        - age
        - address
        - email
      properties:
        name:
          type: string
        lastname:
          type: string
        age:
          type: integer
           format: int64
        address:
          type: string
        email:
          type: string
        tag:
          type: string
    Profiles:
      type: array
      items:
        $ref: "#/components/schemas/newProfile"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
   
#modification du profil
    put:
      tags:
      - "profile"
      summary: "Update an existing profile"
      description: ""
      operationId: "updateProfile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/Schema/Profile"
      responses:
        "400":
          description: "Invalid name supplied"
        "404":
          description: "Profile not found"
        "405":
          description: "Validation exception"
      security:
      - profile_auth:
        - "write:toto"
        - "read:toto"
#trouver utilisateur et le supprimer
/Profiles/{id}:
    get:
      description: 
      operationId: find profile by name
      parameters:
        - name: name
          in: path
          description: name of profile to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single profile of user based on the name supplied
      operationId: deleteProfile
      parameters:
        - name: name
          in: path
          description: name of profile to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: profile deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 Error:
      type: object
      required: #code retour + message affiché sur l'UI
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string


 #afficher tout les utilisateurs par l'admin
paths:
  /profiles:
    get:
      description: |
        Returns all profiles of users from the system
       
      operationId: findProfiles
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: profile response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Profile:
      allOf:
        - $ref: '#/components/schemas/NewProfile'
        - type: object
          required:
          - name
          properties:
            id:
              type: string
#déclarer cas contact
path :
/contacts:
    post:
      summary: add a Contact
      operationId: createContact
      tags:
        - contacts
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    newContact:
      type: object
      required:
        -date
        -lieu
        -typeContact
      properties:
        date:
          type: string
        lieu:
          type: string
        typeContact:
          type: boolean
        nomContact:
          type: string
        tag:
          type: string
    Contacts:
      type: array
      items:
        $ref: "#/components/schemas/Contact"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
 #affichage liste des contacts par l'admin
paths:
  /contacts:
    get:
      description: |
        Returns all contacts
       
      operationId: findContacts
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: contact response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contact'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    contact:
      allOf:
        - $ref: '#/components/schemas/newContact'
        - type: object
          required:
          - name
          properties:
            id:
              type: string

